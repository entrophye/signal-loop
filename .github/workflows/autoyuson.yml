name: Autoyuson — Factual Shorts

on:
  workflow_dispatch:
  schedule:
    - cron: "17 13 * * *"  # her gün 16:17 (+03)

permissions:
  contents: write

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ffmpeg
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ffmpeg

      - name: Install Python dependencies (pinned)
        run: |
          python -V
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --no-cache-dir numpy==1.26.4
          python -m pip install --no-cache-dir imageio==2.31.1 imageio-ffmpeg==0.4.8
          python -m pip install --no-cache-dir moviepy==1.0.3
          python -m pip install --no-cache-dir pillow==9.5.0
          python -m pip install --no-cache-dir edge-tts aiofiles
          python -m pip install --no-cache-dir gTTS requests google-api-python-client google-auth-httplib2 google-auth-oauthlib
          python -m pip install --no-cache-dir soundfile
          python - << 'PY'
          import sys, moviepy, imageio, numpy
          import moviepy.editor as m
          print("Python:", sys.version)
          print("moviepy:", getattr(moviepy, "__version__", "unknown"))
          print("imageio:", imageio.__version__)
          print("numpy:", numpy.__version__)
          print("editor OK:", hasattr(m, "VideoFileClip"))
          PY

      - name: Preflight secrets
        env:
          YT_CLIENT_ID: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}
          TOKEN_JSON_BASE64: ${{ secrets.TOKEN_JSON_BASE64 }}
        run: |
          python - << 'PY'
          import os, sys, base64, json
          cid = os.getenv("YT_CLIENT_ID","").strip()
          cs  = os.getenv("YT_CLIENT_SECRET","").strip()
          rt  = os.getenv("YT_REFRESH_TOKEN","").strip()
          b64 = os.getenv("TOKEN_JSON_BASE64","").strip()
          ok = True
          if not (cid and cs and rt):
              if not b64:
                  print("ERROR: Missing secrets. Provide either:")
                  print("  - YT_CLIENT_ID, YT_CLIENT_SECRET, YT_REFRESH_TOKEN")
                  print("    or")
                  print("  - TOKEN_JSON_BASE64 (base64 of token.json)")
                  ok = False
              else:
                  try:
                      raw = base64.b64decode(b64).decode("utf-8")
                      data = json.loads(raw)
                      if not data.get("refresh_token"):
                          print("ERROR: TOKEN_JSON_BASE64 present but no refresh_token in JSON.")
                          ok = False
                  except Exception:
                      print("ERROR: TOKEN_JSON_BASE64 invalid.")
                      ok = False
          if not ok:
              sys.exit(1)
          print("Secrets preflight OK.")
          PY

      - name: Run Autoyuson
        env:
          YT_CLIENT_ID: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}
          TOKEN_JSON_BASE64: ${{ secrets.TOKEN_JSON_BASE64 }}
          LANGUAGE: "en"
          VIDEO_DURATION: "55"
          TITLE_PREFIX: ""
          EDGE_TTS_VOICE: "en-US-JennyNeural"
        run: |
          python main_autoyuson.py

      - name: Commit seen topics (if changed)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "autoyuson: update seen topics"
          file_pattern: data/seen_topics.json
          commit_user_name: autoyuson-bot
          commit_user_email: autoyuson@users.noreply.github.com
